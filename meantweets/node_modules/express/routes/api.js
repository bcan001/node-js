var express = require('express');
var router = express.Router();
var mongoose = require( 'mongoose' );
var Post = mongoose.model('Post');

//Used for routes that must be authenticated.
function isAuthenticated (req, res, next) {
    // if user is authenticated in the session, call the next() to call the next request handler 
    // Passport adds this method to request object. A middleware is allowed to add properties to
    // request and response objects

    //allow all get request methods
    if(req.method === "GET"){
        return next();
    }
    if (req.isAuthenticated()){
        return next();
    }

    // if the user is not authenticated then redirect him to the login page
    return res.redirect('/#login');
};
//Register the authentication middleware
router.use('/posts', isAuthenticated);

	// gets all the posts
router.route('/posts').get(function(req, res) {
		//response.send({message: 'TODO here are all the posts'});

		//console.log('debug1');
		Post.find(function(err, posts){
			//console.log('debug2');
			if(err){
				return res.send(500, err);
			}
			return res.send(200,posts);
		});

	})
	// creates a new post
	.post(function(req, res) {
		//response.send({message: 'TODO create a new post'});

		var post = new Post();
		post.text = req.body.text;
		post.created_by = req.body.created_by;
		post.save(function(err, post) {
			if (err){
				//console.log('hello');

				return res.send(500, err);
			}
			return res.json(post);
		});
	});

	// gets specified post
router.route('/posts/:id').get(function(req, res) {
		//response.send({message: 'TODO show post ' + request.params.id});
		Post.findById(req.params.id, function(err, post){
			if(err)
				res.send(err);
			res.json(post);
		});

	})
	// updates a specified post
	.put(function(req, res) {
		//response.send({message: 'TODO modify post ' + request.params.id});

		Post.findById(req.params.id, function(err, post){
			if(err)
				res.send(err);

			post.created_by = req.body.created_by;
			post.text = req.body.text;

			post.save(function(err, post){
				if(err)
					res.send(err);

				res.json(post);
			});
		});

	})
	// deletes a specified post
	.delete(function(req, res) {
		//response.send({message: 'TODO delete post ' + request.params.id});
		Post.remove({
			_id: req.params.id
		}, function(err) {
			if (err)
				res.send(err);
			res.json("deleted :(");
		});

	});


module.exports = router;